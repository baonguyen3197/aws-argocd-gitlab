############################################################
# Build and push Docker image to Docker Hub, then bump tags #
############################################################

# This pipeline builds the React app at react-nginx-argocd/app using its Dockerfile,
# pushes to Docker Hub, and then updates the Kustomize overlays to the new image tag
# so Argo CD will sync and deploy to EKS. Uses Kaniko (no Docker-in-Docker required).

stages:
  - build

variables:
  # Path to the app we want to build
  APP_DIR: "react-nginx-argocd/app"
  # The Docker Hub image to push (e.g. username/repo). Set DOCKERHUB_USERNAME in CI variables
  DOCKERHUB_IMAGE: "$DOCKERHUB_USERNAME/react-nginx-argocd"
  # The original image name referenced in kustomization overlays (will be rewritten)
  KUSTOMIZE_OLD_IMAGE: "ghcr.io/your-org/react-nginx-lab"

build-and-push:
  stage: build
  tags: ["[k8s]"]
  image:
    name: gcr.io/kaniko-project/executor:debug
    entrypoint: [""]
  rules:
    - if: '$CI_COMMIT_BRANCH'
  script:
    - echo "IMAGE_TAG=${CI_COMMIT_TAG:-$CI_COMMIT_SHORT_SHA}" > build.env
    - |
      if [ -z "$DOCKERHUB_USERNAME" ] || [ -z "$DOCKERHUB_TOKEN" ]; then
        echo "ERROR: Set DOCKERHUB_USERNAME and DOCKERHUB_TOKEN in CI/CD variables" >&2
        exit 1
      fi
    - |
      if [ ! -f "$APP_DIR/Dockerfile" ]; then
        echo "ERROR: No Dockerfile at $APP_DIR" >&2
        exit 1
      fi
    - |
      mkdir -p /kaniko/.docker
      cat > /kaniko/.docker/config.json <<EOF
      {"auths": {"https://index.docker.io/v1/": {"username": "$DOCKERHUB_USERNAME", "password": "$DOCKERHUB_TOKEN"}}}
      EOF
    - |
      IMAGE_TAG=${CI_COMMIT_TAG:-$CI_COMMIT_SHORT_SHA}
      DEST_ARGS="--destination docker.io/$DOCKERHUB_IMAGE:$IMAGE_TAG"
      if [ "$CI_COMMIT_BRANCH" = "main" ] || [ "$CI_COMMIT_BRANCH" = "master" ]; then
        DEST_ARGS="$DEST_ARGS --destination docker.io/$DOCKERHUB_IMAGE:latest"
      fi
      /kaniko/executor \
        --context $CI_PROJECT_DIR/$APP_DIR \
        --dockerfile $CI_PROJECT_DIR/$APP_DIR/Dockerfile \
        --cache=true \
        $DEST_ARGS
  artifacts:
    reports:
      dotenv: build.env
    when: on_success

# Alternative (no privileged runner required): Kaniko
# Uncomment and use this job instead of build-and-push if your runner cannot run Docker-in-Docker.
#kaniko-build:
#  image:
#    name: gcr.io/kaniko-project/executor:debug
#    entrypoint: [""]
#  stage: build
#  rules:
#    - if: $CI_COMMIT_BRANCH
#  variables:
#    IMAGE_TAG: ${CI_COMMIT_TAG:-$CI_COMMIT_SHORT_SHA}
#  script:
#    - |
#      mkdir -p /kaniko/.docker
#      cat > /kaniko/.docker/config.json <<EOF
#      {"auths": {"https://index.docker.io/v1/": {"username": "$DOCKERHUB_USERNAME", "password": "$DOCKERHUB_TOKEN"}}}
#      EOF
#    - |
#      /kaniko/executor \
#        --context $CI_PROJECT_DIR/$APP_DIR \
#        --dockerfile $CI_PROJECT_DIR/$APP_DIR/Dockerfile \
#        --destination docker.io/$DOCKERHUB_IMAGE:$IMAGE_TAG \
#        --cache=true
