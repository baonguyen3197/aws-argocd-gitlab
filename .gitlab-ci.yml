stages:
  - build
  - sync

variables:
  APP_DIR: "react-nginx-argocd/app"
  DOCKERHUB_IMAGE: "$DOCKERHUB_USERNAME/react-nginx-argocd"
  DOCKERHUB_USERNAME: "nhqb3197"
  DOCKERHUB_TOKEN: "{{DOCKERHUB_TOKEN}}"
  ARGOCD_BASE_URL: "http://argocd-server.argocd.svc.cluster.local"
  ARGOCD_SERVER: "argocd-server.argocd.svc.cluster.local:80"
  ARGOCD_AUTH_TOKEN: "{{ARGOCD_TOKEN}}"
  ARGOCD_APP: "react-nginx-dev"
  ARGOCD_PLAINTEXT: true

build-and-push:
  stage: build
  tags: ["k8s"]
  image:
    name: gcr.io/kaniko-project/executor:debug
    entrypoint: [""]
  rules:
    - if: '$CI_COMMIT_BRANCH'
  script:
    - echo "IMAGE_TAG=${CI_COMMIT_TAG:-$CI_COMMIT_SHORT_SHA}" > build.env
    - |
      if [ -z "$DOCKERHUB_USERNAME" ] || [ -z "$DOCKERHUB_TOKEN" ]; then
        echo "ERROR: Set DOCKERHUB_USERNAME and DOCKERHUB_TOKEN in CI/CD variables" >&2
        exit 1
      fi
    - |
      if [ ! -f "$APP_DIR/Dockerfile" ]; then
        echo "ERROR: No Dockerfile at $APP_DIR" >&2
        exit 1
      fi
    - |
      mkdir -p /kaniko/.docker
      cat > /kaniko/.docker/config.json <<EOF
      {"auths": {"https://index.docker.io/v1/": {"username": "$DOCKERHUB_USERNAME", "password": "$DOCKERHUB_TOKEN"}}}
      EOF
    - |
      IMAGE_TAG=${CI_COMMIT_TAG:-$CI_COMMIT_SHORT_SHA}
      DEST_ARGS="--destination docker.io/$DOCKERHUB_IMAGE:$IMAGE_TAG"
      if [ "$CI_COMMIT_BRANCH" = "main" ] || [ "$CI_COMMIT_BRANCH" = "master" ]; then
        DEST_ARGS="$DEST_ARGS --destination docker.io/$DOCKERHUB_IMAGE:latest"
      fi
      /kaniko/executor \
        --context $CI_PROJECT_DIR/$APP_DIR \
        --dockerfile $CI_PROJECT_DIR/$APP_DIR/Dockerfile \
        --cache=true \
        $DEST_ARGS
  artifacts:
    reports:
      dotenv: build.env
    when: on_success

argocd-sync:
  stage: sync
  tags: ["k8s"]
  image: curlimages/curl:8.10.1
  needs: ["build-and-push"]
  rules:
    - if: '$CI_COMMIT_BRANCH'
  script:
    - |
      set -e
      : "${ARGOCD_BASE_URL:=http://argocd-server.argocd.svc.cluster.local}"
      : "${ARGOCD_APP:=react-nginx-dev}"
      if [ -z "${ARGOCD_AUTH_TOKEN:-}" ]; then
        echo "ERROR: set ARGOCD_AUTH_TOKEN CI variable" >&2; exit 1; fi
      curl -fsS -X POST \
        -H "Authorization: Bearer ${ARGOCD_AUTH_TOKEN}" \
        -H "Content-Type: application/json" \
        "${ARGOCD_BASE_URL}/api/v1/applications/${ARGOCD_APP}/refresh" \
        -d '{"hard":true}'
      curl -fsS -X POST \
        -H "Authorization: Bearer ${ARGOCD_AUTH_TOKEN}" \
        -H "Content-Type: application/json" \
        "${ARGOCD_BASE_URL}/api/v1/applications/${ARGOCD_APP}/sync" \
        -d '{}'